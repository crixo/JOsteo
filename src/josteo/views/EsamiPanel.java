/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EsamiPanel.java
 *
 * Created on Nov 10, 2010, 7:02:11 PM
 */

package josteo.views;

import josteo.views.UI.EsameAdvancedTableFormat;
import josteo.infrastructure.UI.PanelListBase;
import java.util.*;
import javax.swing.event.*;
import ca.odell.glazedlists.swing.*;
import ca.odell.glazedlists.*;
import ca.odell.glazedlists.gui.*;

import josteo.viewmodels.*;
import josteo.model.paziente.*;
import josteo.application.*;
import josteo.infrastructure.helpers.*;
import josteo.infrastructure.DomainBase.*;
import josteo.infrastructure.UI.*;

import org.jdesktop.swingbinding.*;
import org.jdesktop.beansbinding.*;
import org.jdesktop.swingbinding.SwingBindings;
import javax.swing.*;
import java.awt.event.*;
import josteo.model.tipoAnamnesi.TipoAnamnesi;
import josteo.model.tipoEsame.TipoEsame;

/**
 *
 * @author cristiano
 */
public class EsamiPanel extends PanelListBase<Esame> implements IConsultoSelectedListner{
    private List<TipoEsame> _esami;

    /** Creates new form EsamiPanel */
    public EsamiPanel() {
        super();
        initComponents();

        this._presenter = new josteo.viewmodels.EsamiPresenter();

        ApplicationState.getInstance().addConsultoSelectedListener(this);
        
        this._esami = ((ITipoEsameService)ContainerHelper.getContainer().getBean("TipoEsameService")).GetAllEsami();

        // create the binding from List to JComboBox
        JComboBoxBinding cb = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ, _esami, this.cbEsami);
        // realize the binding
        cb.bind();


        this.jTable1.setRowHeight(32);

        this.taDescrizione.getDocument().addDocumentListener(new UpdateListener());
        this.dcData.addPropertyChangeListener(new MyPropertyChangeListener());

        this._isDirty = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        pnEditing = new javax.swing.JPanel();
        pnData = new javax.swing.JPanel();
        dcData = new com.toedter.calendar.JDateChooser();
        lblData = new javax.swing.JLabel();
        pnDescrizione = new javax.swing.JPanel();
        lblDescrizione = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDescrizione = new javax.swing.JTextArea();
        pnTipoEsame = new javax.swing.JPanel();
        cbEsami = new javax.swing.JComboBox();
        lblTipoEsami = new javax.swing.JLabel();
        pnSubmit = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        btnStore = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setPreferredSize(new java.awt.Dimension(900, 350));

        pnEditing.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Esame", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 2, 13))); // NOI18N

        lblData.setText("Data");

        org.jdesktop.layout.GroupLayout pnDataLayout = new org.jdesktop.layout.GroupLayout(pnData);
        pnData.setLayout(pnDataLayout);
        pnDataLayout.setHorizontalGroup(
            pnDataLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dcData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(lblData)
        );
        pnDataLayout.setVerticalGroup(
            pnDataLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnDataLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(lblData)
                .add(0, 0, 0)
                .add(dcData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0))
        );

        lblDescrizione.setText("Descrizione");

        taDescrizione.setColumns(20);
        taDescrizione.setRows(5);
        jScrollPane2.setViewportView(taDescrizione);

        org.jdesktop.layout.GroupLayout pnDescrizioneLayout = new org.jdesktop.layout.GroupLayout(pnDescrizione);
        pnDescrizione.setLayout(pnDescrizioneLayout);
        pnDescrizioneLayout.setHorizontalGroup(
            pnDescrizioneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnDescrizioneLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(pnDescrizioneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblDescrizione)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .add(0, 0, 0))
        );
        pnDescrizioneLayout.setVerticalGroup(
            pnDescrizioneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnDescrizioneLayout.createSequentialGroup()
                .add(lblDescrizione)
                .add(0, 0, 0)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 142, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0))
        );

        lblTipoEsami.setText("Tipo Esame");

        org.jdesktop.layout.GroupLayout pnTipoEsameLayout = new org.jdesktop.layout.GroupLayout(pnTipoEsame);
        pnTipoEsame.setLayout(pnTipoEsameLayout);
        pnTipoEsameLayout.setHorizontalGroup(
            pnTipoEsameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnTipoEsameLayout.createSequentialGroup()
                .add(lblTipoEsami)
                .addContainerGap(276, Short.MAX_VALUE))
            .add(cbEsami, 0, 348, Short.MAX_VALUE)
        );
        pnTipoEsameLayout.setVerticalGroup(
            pnTipoEsameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnTipoEsameLayout.createSequentialGroup()
                .add(lblTipoEsami)
                .add(0, 0, 0)
                .add(cbEsami, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnStore.setText("Store");
        btnStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStoreActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnSubmitLayout = new org.jdesktop.layout.GroupLayout(pnSubmit);
        pnSubmit.setLayout(pnSubmitLayout);
        pnSubmitLayout.setHorizontalGroup(
            pnSubmitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnSubmitLayout.createSequentialGroup()
                .addContainerGap()
                .add(btnReset)
                .add(49, 49, 49)
                .add(btnStore)
                .addContainerGap())
        );
        pnSubmitLayout.setVerticalGroup(
            pnSubmitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnSubmitLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(pnSubmitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnStore)
                    .add(btnReset))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout pnEditingLayout = new org.jdesktop.layout.GroupLayout(pnEditing);
        pnEditing.setLayout(pnEditingLayout);
        pnEditingLayout.setHorizontalGroup(
            pnEditingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnEditingLayout.createSequentialGroup()
                .add(pnEditingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnEditingLayout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(pnEditingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnDescrizione, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pnData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pnTipoEsame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(pnEditingLayout.createSequentialGroup()
                        .add(79, 79, 79)
                        .add(pnSubmit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        pnEditingLayout.setVerticalGroup(
            pnEditingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnEditingLayout.createSequentialGroup()
                .add(pnData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(5, 5, 5)
                .add(pnTipoEsame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(5, 5, 5)
                .add(pnDescrizione, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnSubmit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jScrollPane1.setPreferredSize(new java.awt.Dimension(450, 400));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Data", "Tipo", "Descrizione"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 441, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnEditing, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 407, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, 0, 0, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(pnEditing, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 335, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStoreActionPerformed
        // TODO add your handling code here:
        store();
}//GEN-LAST:event_btnStoreActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
}//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnStore;
    private javax.swing.JComboBox cbEsami;
    private com.toedter.calendar.JDateChooser dcData;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDescrizione;
    private javax.swing.JLabel lblTipoEsami;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JPanel pnData;
    private javax.swing.JPanel pnDescrizione;
    private javax.swing.JPanel pnEditing;
    private javax.swing.JPanel pnSubmit;
    private javax.swing.JPanel pnTipoEsame;
    private javax.swing.JTextArea taDescrizione;
    // End of variables declaration//GEN-END:variables

        class DateComparator implements Comparator{
        public int compare(Object obj1, Object obj2){
            //parameter are of type Object, so we have to downcast it to Employee objects
            Date dt1 = ( (Esame) obj1 ).get_Note().get_Data();
            Date dt2 = ( (Esame) obj2 ).get_Note().get_Data();
            //uses compareTo method of String class to compare names of the employee
            return dt1.compareTo(dt2);
        }
    }

    public void ConsultoSelected( Consulto consulto ){
        System.out.println("EsamiPanel->ConsultoSelected consulto.Key: " + (consulto==null? "null" : consulto.get_Key().toString()));
        this.Init();
    }

    @Override
    public void Init(){
        this._items = new SortedList( this._presenter.getItems(), new DateComparator());
        gridConfig(new EsameAdvancedTableFormat());

        this._presenter.Load();

        this.addTabLisntener();

        reset();
    }



    @Override
    protected JTable getTable(){
        return this.jTable1;
    }

    @Override
    protected void bindUI(){
        Esame item = this._presenter.getSelected();
        if(item==null)
            item = this._presenter.getNewItem();

        System.out.println("bindUI -> selItem:"+item.get_Key().toString());
        if(item==null) return;
        boolean bBind = true;
        if(this._isDirty){
            int i = JOptionPane.showConfirmDialog(null,"Vuoi sovrascrivere i dati nel form con la nuova selezione?","Dati non salvati", JOptionPane.YES_NO_OPTION);
            bBind = (i==0);
        }
        if(bBind){
            this.taDescrizione.setText((this._presenter.getSelected()!=null)? item.get_Note().get_Descrizione() : "");
            this.dcData.setDate((this._presenter.getSelected()!=null)? item.get_Note().get_Data() : null);

            this.cbEsami.setSelectedIndex(-1);
            if(this._presenter.getSelected()!=null)
            for(TipoEsame i : this._esami){
                if(i.get_Key().equals(this._presenter.getSelected().get_TipoEsame().get_Key())){
                    this.cbEsami.setSelectedItem(i);
                    break;
                }
            }

            this._isDirty = false;
            System.out.println("bindUI done");
        }

    }

    @Override
    protected boolean bindToPresenter(){
        Esame itemTmp = new Esame(0
                , new josteo.model.paziente.Note(this.taDescrizione.getText(),this.dcData.getDate())
                , (TipoEsame)this.cbEsami.getSelectedItem());
        List<BrokenRule> brokenRules = itemTmp.GetBrokenRules();
        if(brokenRules.size()>0){
            List<String> errors = new ArrayList<String>();
            for(BrokenRule br : brokenRules)
                errors.add(br.get_Message());

            JOptionPane.showMessageDialog(this, josteo.infrastructure.helpers.StringHelper.join(errors,"\n"));
            return false;
        }


        Esame item = this._presenter.getSelected()==null? this._presenter.getNewItem() : this._presenter.getSelected();
        System.out.println("bindToPresenter:" + item.get_Key());
        item.set_TipoEsame(itemTmp.get_TipoEsame());
        item.set_Note(itemTmp.get_Note());
        return true;
    }



}
