/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HomeView.java
 *
 * Created on Oct 23, 2010, 11:04:05 AM
 */

package josteo.views;



import javax.swing.*;
import java.awt.event.*;
import java.awt.Dimension;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import josteo.model.paziente.Paziente;
import josteo.infrastructure.UI.*;
import josteo.application.*;
import josteo.infrastructure.helpers.ConfigHelper;



/**
 *
 * @author cristiano
 */
public class HomeView extends ViewBase implements josteo.infrastructure.UI.IView, IPazienteSelectedListner{

PazientePanel pazientePanel;
ConsultiPanel consultiPanel;
AnamnesiRemotePanel anamnesiRemotePanel;


    /** Creates new form HomeView */
    public HomeView() {
        //System.setProperty("apple.laf.useScreenMenuBar", "true");
        super();

        initComponents();

        this.setTitle(ConfigHelper.getInstance().getFullAppName());

        ApplicationState.getInstance().addPazienteSelectedListener(this);

        buildMenu();

        PazientiPanel pazientiPanel = new PazientiPanel();
        pazientePanel = new PazientePanel();

        JScrollPane spPaziente = new JScrollPane();
        spPaziente.setViewportView(pazientePanel);

              
        consultiPanel = new ConsultiPanel();
        JScrollPane spConsulti = new JScrollPane();
        spConsulti.setViewportView(consultiPanel);

        anamnesiRemotePanel = new AnamnesiRemotePanel();
        JScrollPane spAnamnesiRemote = new JScrollPane();
        spAnamnesiRemote.setViewportView(anamnesiRemotePanel);

        jSplitPane1.setDividerLocation(0.6);

        jSplitPane1.setLeftComponent(pazientiPanel);

        jTabbedPane1.addTab("Paziente", spPaziente);
        jTabbedPane1.addTab("Consulti", spConsulti);
        jTabbedPane1.addTab("Anamnesi Remote", spAnamnesiRemote);
        
        // Disable the tab
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);

        ChangeListener changeListener = new ChangeListener() {
          public void stateChanged(ChangeEvent changeEvent) {
            JTabbedPane sourceTabbedPane = (JTabbedPane) changeEvent.getSource();
            int index = sourceTabbedPane.getSelectedIndex();
            System.out.println("Tab changed to: " + sourceTabbedPane.getTitleAt(index));
          }
        };
        jTabbedPane1.addChangeListener(changeListener);


    }






    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setRightComponent(jTabbedPane1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    public void PazienteSelected( Paziente paziente ){
        System.out.println("PazientePanel->PazienteSelected:" + (paziente==null? "null" : paziente.getCognome()));
        boolean enabled = paziente!=null;
        jTabbedPane1.setEnabledAt(1, enabled);
        jTabbedPane1.setEnabledAt(2, enabled);
        jTabbedPane1.setSelectedIndex(0);
    }

    public void Init(){

        JTextField txt = new JTextField();
        txt.setText("pippo");

        JLabel lbl = new JLabel();
        lbl.setText("pippo");

        ((PanelBase)jSplitPane1.getLeftComponent()).Init();
        
        //java.awt.Component cmp = jTabbedPane1.getComponentAt(0);
        //((PanelBase)cmp).Init();
        pazientePanel.Init();


        jSplitPane1.getLeftComponent().setMinimumSize(new Dimension(200,400));
        jSplitPane1.getRightComponent().setMinimumSize(new Dimension(200,200));

    }


    /*
  class ColumnListener extends MouseAdapter {
    protected JTable table;

    public ColumnListener(JTable t) {
      table = t;
    }

    public void mouseClicked(MouseEvent e) {
      TableColumnModel colModel = table.getColumnModel();
      int columnModelIndex = colModel.getColumnIndexAtX(e.getX());
      int modelIndex = colModel.getColumn(columnModelIndex)
          .getModelIndex();

      if (modelIndex < 0)
        return;
      if (sortCol == modelIndex)
        isSortAsc = !isSortAsc;
      else
        sortCol = modelIndex;

      for (int i = 0; i < columnsCount; i++) {
        TableColumn column = colModel.getColumn(i);
        column.setHeaderValue(getColumnName(column.getModelIndex()));
      }
      table.getTableHeader().repaint();

      Collections.sort(vector,new MyComparator(isSortAsc));
      table.tableChanged(new TableModelEvent(MyTableModel.this));
      table.repaint();
    }
  }
*/

    private void buildMenu(){
        //Where the GUI is created:
        JMenuBar menuBar;
        JMenu menu, submenu;
        JMenuItem menuItem;
        JRadioButtonMenuItem rbMenuItem;
        JCheckBoxMenuItem cbMenuItem;

        //Create the menu bar.
        menuBar = new JMenuBar();

        //Build the first menu.
        menu = new JMenu("Pazienti");
        menu.setMnemonic(KeyEvent.VK_P);
        //menu.getAccessibleContext().setAccessibleDescription("The only menu in this program that has menu items");
        menuBar.add(menu);

        //a group of JMenuItems
        menuItem = new JMenuItem("Elenco Pazienti", KeyEvent.VK_A);
        //menuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_1, ActionEvent.ALT_MASK));
        //menuItem.getAccessibleContext().setAccessibleDescription("This doesn't really do anything");
        menuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                josteo.application.ApplicationState.getInstance().setCurrentPaziente(null);

                josteo.application.ApplicationState.getInstance().SwitchView("HomeView");
            }
        });
        menu.add(menuItem);

        //Build the second menu.
        menu = new JMenu("Tools");
        menu.setMnemonic(KeyEvent.VK_T);
        menuBar.add(menu);

        menuItem = new JMenuItem("Import");
        menuItem.setName("Import");
        //menuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_1, ActionEvent.ALT_MASK));
        //menuItem.getAccessibleContext().setAccessibleDescription("This doesn't really do anything");
        menuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                josteo.application.ApplicationState.getInstance().setCurrentPaziente(null);

                josteo.application.ApplicationState.getInstance().SwitchView("ImportView");
            }
        });
        menu.add(menuItem);

        menuItem = new JMenuItem("Export");
        menuItem.setName("Export");
        //menuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_1, ActionEvent.ALT_MASK));
        //menuItem.getAccessibleContext().setAccessibleDescription("This doesn't really do anything");
        menuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                josteo.application.ApplicationState.getInstance().setCurrentPaziente(null);

                josteo.application.ApplicationState.getInstance().SwitchView("ExportView");
            }
        });
        menu.add(menuItem);

        menuItem = new JMenuItem("Logging");
        menuItem.setName("Logging");
        //menuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_1, ActionEvent.ALT_MASK));
        //menuItem.getAccessibleContext().setAccessibleDescription("This doesn't really do anything");
        menuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                josteo.application.ApplicationState.getInstance().setCurrentPaziente(null);

                josteo.application.ApplicationState.getInstance().SwitchView("LoggingView");
            }
        });
        menu.add(menuItem);

        this.setJMenuBar(menuBar);
    }


    private void menuItem_PazienteDettaglio(ActionEvent e){
        JMenuItem source = (JMenuItem)e.getSource();
        /*
        if(HomeView.this._presenter.get_SelectedPaziente()!=null){
            IPazienteService svc = (IPazienteService) ContainerHelper.getContainer().getBean("PazienteService");
            ApplicationState.getInstance().setCurrentPaziente(svc.GetPaziente(HomeView.this._presenter.get_SelectedPaziente().getEntity().get_Key()));

            josteo.application.ApplicationState.getInstance().SwitchView(source.getName()+"View");
        }else{
            JOptionPane.showMessageDialog(rootPane, "Nessun paziente selezionato");
        }
         
         */
    }








//        java.lang.reflect.Method m1 = null;
//        try{
//            m1 = this.getClass().getMethod("setSelected", new Class[] {Object.class});
//        }catch(Exception exc){
//            System.out.println(exc.getMessage());
//        }

}

